"""
Django settings for artist_portfolio project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
ENVIRONMENT = os.getenv("DJANGO_ENV", "development")

if ENVIRONMENT == "development":
    import environ
    env = environ.Env()
    environ.Env.read_env()

SECRET_KEY = env("SECRET_KEY")
CLIENT_ID = env("CLIENT_ID")
CLIENT_SECRET = env("CLIENT_SECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "True") == "True"

# ALLOWED_HOSTS
if ENVIRONMENT == "development":
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = [
        "artist-portfolio-fquo.onrender.com",
        "artist-portfolio-3d-gallery.onrender.com",
    ]

# Application definition
INSTALLED_APPS = [
    "corsheaders",
    'admin_interface',
    'colorfield',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.sites",

    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.facebook",
    "widget_tweaks",

    "qrcode",
    "django_otp",
    "django_otp.plugins.otp_totp",
    "django_otp.plugins.otp_static",

    'django_filters',
    'drf_spectacular',

    'phonenumber_field',
    'django_countries',

    'core',
    'gallery',
    'orders',
    'store',
    'users',
    'cart',
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

MIDDLEWARE.insert(1, "django_otp.middleware.OTPMiddleware")

# CORS
if ENVIRONMENT == "development":
    CORS_ALLOWED_ORIGINS = [
        "http://192.168.0.157:8080",  # for local server only
    ]
else:
    CORS_ALLOWED_ORIGINS = [
        "https://artist-portfolio-fquo.onrender.com",
        "https://artist-portfolio-3d-gallery.onrender.com",
    ]

ROOT_URLCONF = 'artist_portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Store API',
    'DESCRIPTION': 'API for a store with filters, search and sorting',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

WSGI_APPLICATION = 'artist_portfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

SITE_ID = 1

# Automatic redirect after login
LOGIN_REDIRECT_URL = "/profile/"
LOGOUT_REDIRECT_URL = "/"

# Using email as the main login method
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
SOCIALACCOUNT_LOGIN_ON_GET = True
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': CLIENT_ID,
            'secret': CLIENT_SECRET,
            'key': ''
        }
    }
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

if ENVIRONMENT == "production":
    STATIC_ROOT = BASE_DIR / 'staticfiles'  # For the production environment
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

if ENVIRONMENT == "production":
    MEDIA_URL = 'https://artist-portfolio-fquo.onrender.com/media/'  # for the production server
    MEDIA_ROOT = '/var/www/artist_portfolio/media'
else:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
LOGIN_URL = "/login/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuring SMTP for Gmail
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = "senpyinteractive@gmail.com"  # Gmail senpyinteractive@gmail.com
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")  # gmail app password

# Configuring for WhatsApp
API_KEY = env("API_KEY")
PHONE_NUMBER = env("PHONE_NUMBER")


CSRF_FAILURE_VIEW = 'django.views.csrf.csrf_failure'


# Setting up storage integration Backblaze B2 with Django
# pip install django-storages[boto3]
#
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')  # ID ключа
# AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')  # Секретний ключ
# AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')  # назва Bucket
# AWS_S3_REGION_NAME = 'us-west-000'  # це стандартний регіон Backblaze
# AWS_S3_ENDPOINT_URL = 'https://s3.us-west-000.backblazeb2.com'  # Домен для публічних файлів
# AWS_QUERYSTRING_AUTH = False  # False для публічних файлів, True для приватних
# AWS_DEFAULT_ACL = None  # Встановлено "None", щоб не було обмежень за ACL


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# rerdis
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': 'redis://127.0.0.1:6379/1',
#         'OPTIONS': {
#             'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#         },
#         'KEY_PREFIX': 'store'
#     }
# }

# Cache storage time (10 minutes)
CACHE_TTL = 60 * 10
